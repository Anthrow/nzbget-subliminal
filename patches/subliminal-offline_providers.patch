diff -Naur subliminal-0.7.4.allpatched/subliminal/api.py subliminal-0.7.4.handleconnections/subliminal/api.py
--- subliminal-0.7.4.allpatched/subliminal/api.py	2014-08-23 14:28:03.000000000 -0400
+++ subliminal-0.7.4.handleconnections/subliminal/api.py	2014-08-24 09:07:40.000000000 -0400
@@ -8,7 +8,7 @@
 import pkg_resources
 from .exceptions import ProviderNotAvailable, InvalidSubtitle
 from .subtitle import get_subtitle_path
-
+from socket import error as socket_error
 
 logger = logging.getLogger(__name__)
 
@@ -119,6 +119,15 @@
                         logger.warning('Provider %r is not available, discarding it', subtitle.provider_name)
                         discarded_providers.add(subtitle.provider_name)
                         continue
+                    except socket_error as err:
+                        logger.warning('Provider %r is not responding, discarding it', subtitle.provider_name)
+                        logger.debug('Provider socket error: %r', str(err))
+                        discarded_providers.add(subtitle.provider_name)
+                        continue
+                    except:
+                        logger.exception('Unexpected error in provider %r', subtitle.provider_name)
+                        discarded_providers.add(subtitle.provider_name)
+                        continue
                     initialized_providers[subtitle.provider_name] = provider
 
                 # download subtitles
@@ -198,6 +207,13 @@
         except ProviderNotAvailable:
             logger.warning('Provider %r is not available, discarding it', provider_entry_point.name)
             continue
+        except socket_error as err:
+            logger.warning('Provider %r is not responding, discarding it', provider_entry_point.name)
+            logger.debug('Provider socket error: %r', str(err))
+            continue
+        except:
+            logger.exception('Unexpected error in provider %r', provider_entry_point.name)
+            continue
         initialized_providers[provider_entry_point.name] = provider
     try:
         for video in videos:
@@ -302,6 +302,9 @@
                 provider.terminate()
             except ProviderNotAvailable:
                 logger.warning('Provider %r is not available, unable to terminate', provider_name)
+            except socket_error as err:
+                logger.warning('Provider %r is not available, unable to terminate', provider_name)
+                logger.debug('Provider socket error: %r', str(err))
             except:
                 logger.exception('Unexpected error in provider %r', provider_name)
     return downloaded_subtitles
